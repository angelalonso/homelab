---
groups:
  # "new_groupname" groups are special ones:
  # these define changes to the ssh connection, such as:
  # - ssh port
  # - ssh user/password
  # , and then the "groupname" will be applied to the host under the new ssh config
  # See hosts for an example of the double definition for test01
  new_raspbian:
    hosts:
    - test01
# TODO: is this needed?
    ssh_port: 22
# Packages you want to install from the beginning
    packages:
# python-apt is needed for ansible's dry run
      - python-apt
      - git
      - vim
# TODO: is this needed?
    ansible_user:
      name: admin
      password: test
      ssh_key: "/home/admin/.ssh/admin.pub"
      ssh_path: "/home/admin/.ssh"
  # this is the so-called "groupname" discussed above
  raspbian:
    hosts:
    - test01
    - test02
    ssh_port: 2222
    packages:
      - python-apt
      - git
      - vim
    ansible_user:
      name: admin
      password: test
      ssh_key: "/home/admin/.ssh/admin.pub"
      ssh_path: "/home/admin/.ssh"
#   other_users:
  dockernode:
    docker_users:
    - admin
hosts:
  # This is the definition for test01 before we change the ssh config on it
  192.168.0.1:
    ip: "192.168.0.1"
    ansible_user:
      name: defaultuser
      password: defaultpass
  # And this is the definition for test01 after we have corrected the ssh config
  test01:
    ip: "192.168.0.1"
    ansible_user:
      name: test1
      password: testpass1
  # here, test02 is a regular host that is ready to apply the manifests for "groupname"
  test02:
    ip: "192.168.0.2"
    ansible_user:
      name: test2
# if there's an ssh_key, password will still be used to gain sudo
      password: 'testpass2'
      ssh_key: /bla/bleh.pem
