---
- hosts: new_raspbian
  gather_facts: false
  become: yes
  vars:
    users:
      - name: {{ secrets_group.ansible_user.name }}
        pass: {{ getSaltedPassword(secrets_group.ansible_user.password) }}
        ssh_key: {{ secrets_group.ansible_user.ssh_key }}
        ssh_path: {{ secrets_group.ansible_user.ssh_path }}
  {% if secrets_group.other_users is defined %}
  {% for name, values in secrets_group.other_users.items() %}
      - name: {{ name }}
        pass: {{ getSaltedPassword(values.password) }}
        ssh_key: {{ values.ssh_key }}
        ssh_path: {{ values.ssh_path }}
  {% endfor %}
  {% endif %}
    system_vars:
      ssh_port: {{ secrets_group.ssh_port }}
      packages:
  {% for pkg in secrets_group.packages %}
        - {{ pkg }}
  {% endfor %}
  tasks:
{% raw %}
# change hostname
    - name: "correct hostname"
      hostname:
        name: "{{ hostvars.hostname }}"
# add user, make it admin
    - name: "new user"
      user:
        name: "{{ item.name }}"
        password: "{{ item.pass }}"
        groups: # Empty by default, here we give it some groups
         - sudo
        state: present
      with_items: "{{ users }}"
# give the user an ssh key
    - name: "user ssh key"
      authorized_key:
        user: "{{ item.name }}"
        key: "{{ lookup('file', item.ssh_key) }}"
      with_items: "{{ users }}"
      when: not ansible_check_mode
# install packages
    - name: "install base packages"
      apt: name={{ item }} state=present
      with_items: "{{ system_vars.packages }}"
      when: not ansible_check_mode
# copy a templated config file for sshd
    - name: "copy sshd_config file with owner and permissions"
      copy:
        # takes it from ./manifests anyway
        src: sshd_config_new_raspbian
        dest: /etc/ssh/sshd_config
        owner: root
        group: root
        mode: '0644'
    - name: "restart sshd"
      service:
        name: sshd
        state: restarted
{% endraw %}
