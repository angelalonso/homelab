---
{% for group, values in secrets.groups.items() %}
- hosts: {{ group }}
  gather_facts: false
  become: yes
  vars:
    users:
  {% for name, values in values.ansible_user.items() %}
      - name: {{ name }}
        pass: {{ getSaltedPassword(values.password) }}
        ssh_key: {{ values.ssh_key }}
        ssh_path: {{ values.ssh_path }}
  {% endfor %}
  {% if values.other_users is defined %}
  {% for name, values in values.other_users.items() %}
      - name: {{ name }}
        pass: {{ getSaltedPassword(values.password) }}
        ssh_key: {{ values.ssh_key }}
        ssh_path: {{ values.ssh_path }}
  {% endfor %}
  {% endif %}
  tasks:
{% raw %}
# change hostname
    - name: "correct hostname"
      hostname:
        name: "{{ hostvars.ansible_host }}"
# add user, make it admin
    - name: "new user"
      user:
        name: "{{ item.name }}"
        password: "{{ item.pass }}"
        groups: # Empty by default, here we give it some groups
         - sudo
        state: present
      with_items: "{{ users }}"
# give the user an ssh key
    - name: "user ssh key"
      authorized_key:
        user: "{{ item.name }}"
        key: "{{ lookup('file', item.ssh_key) }}"
      with_items: "{{ users }}"
# remove pi user
    - name: "remove pi user"
      user:
       name: 'pi'
       state: absent
       remove: yes
# install packages
    - name: "install base packages"
      apt: name={{ item }} state=installed
      with_items:
        - git
        - vim
        - ufw
        - fail2ban
{% endraw %}
{% endfor %}
# expand root filesystem?
# configure ssh port etc
# configure ufw
# python3 by default?
