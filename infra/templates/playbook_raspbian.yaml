---
- hosts: raspbian
  gather_facts: yes
  become: yes
  vars:
    system_vars:
      ssh_port: {{ secrets_group.ssh_port }}
      packages:
  {% for pkg in secrets_group.packages %}
        - {{ pkg }}
  {% endfor %}
  tasks:
{% raw %}
## START - This is already done at phase1_raspbian, but let's check again it's fine
# change hostname
# change hostname
    - name: "correct hostname"
      hostname:
        name: "{{ inventory_hostname }}"
    - name: "add host name to /etc/hosts"
      lineinfile:
        dest: /etc/hosts
        regexp: '^127\.0\.0\.1[ \t]+localhost'
        line: "127.0.0.1 {{ inventory_hostname }} localhost"
        state: present
# install packages
    - name: "install base packages"
      apt: name={{ item }} state=present
      with_items: "{{ system_vars.packages }}"
# copy a templated config file for sshd, restart it
    - name: "copy sshd_config file with owner and permissions"
      copy:
        # ansible looks for src within manifests anyway
        src: sshd_config_raspbian 
        dest: /etc/ssh/sshd_config
        owner: root
        group: root
        mode: '0644'
      notify: "restart sshd"
    - name: "restart sshd"
      service:
        name: sshd
        state: restarted
## END - This is already done at phase1_raspbian, but let's check again it's fine
# configure ufw
    - name: Allow all access to SSH port
      ufw:
        rule: allow
        port: '{{ system_vars.ssh_port }}'
        comment: 'ssh access'
      with_items: "{{ system_vars }}"
      when: not ansible_check_mode
    - name: "deny everything and enable UFW"
      ufw:
        state: enabled
        policy: deny
      when: not ansible_check_mode
    - name: "restart machine"
      command: shutdown -r now "Ansible updates triggered"
      async: 0
      poll: 0
      ignore_errors: True
    - name: Waiting for server to come back up
      local_action: wait_for host="{{ inventory_hostname }}" port="{{ system_vars.ssh_port }}" state=started
{% endraw %}
# expand root filesystem?
# python3 by default?
